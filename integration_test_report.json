{
  "summary": {
    "total_test_suites": 8,
    "total_tests": 0,
    "total_passed": 0,
    "total_failed": 0,
    "total_errors": 0,
    "total_skipped": 0,
    "overall_success_rate": 0.0,
    "total_duration": 2.3189797401428223,
    "critical_success_rate": 0.0
  },
  "coverage": {
    "total_coverage_areas": 59,
    "coverage_areas": [
      "Basic pipeline execution across providers",
      "Caching effectiveness",
      "Complex workflows",
      "Concurrent error scenarios",
      "Concurrent execution performance",
      "Concurrent operations",
      "Configuration error messages",
      "Configuration profile creation (6 profiles)",
      "Configuration validation errors",
      "Dependency resolution",
      "Enhanced run command with --provider/--profile",
      "Environment variable resolution",
      "Error handling and recovery",
      "Error isolation and recovery",
      "Error message quality",
      "Invalid input handling",
      "LLM-based plugin provider integration",
      "Legacy configuration conversion",
      "Load testing scenarios",
      "Memory usage patterns",
      "Mixed plugin execution",
      "Mixed plugin pipeline execution",
      "Parameter inheritance and overrides",
      "Performance and caching",
      "Performance benchmarking across providers",
      "Performance characteristics",
      "Plugin configuration inheritance",
      "Plugin discovery and registration",
      "Plugin error isolation",
      "Plugin integration with providers",
      "Profile switching runtime behavior",
      "Profile-based execution",
      "Provider configuration validation",
      "Provider connection failures",
      "Provider discovery and availability",
      "Provider switching and fallback",
      "Provider switching during runtime",
      "Pydantic v2 schema validation",
      "Recovery mechanisms",
      "Reliability under sustained load",
      "Resource consumption monitoring",
      "Resource exhaustion scenarios",
      "Scalability testing",
      "Technique-based plugin compatibility",
      "Validation edge cases",
      "check-provider command",
      "config-health command",
      "creative-anthropic profile",
      "fast-gpt35 profile",
      "list-profiles command",
      "list-providers command",
      "local-development profile",
      "local-llama profile",
      "production-anthropic profile",
      "research-openai profile",
      "show-config command",
      "show-profile command",
      "test-provider command",
      "validate-config command"
    ],
    "critical_suites": 5,
    "provider_coverage": [
      "OpenAI",
      "Anthropic",
      "Ollama",
      "HuggingFace"
    ],
    "profile_coverage": [
      "research-openai",
      "production-anthropic",
      "local-development",
      "fast-gpt35",
      "creative-anthropic",
      "local-llama"
    ],
    "cli_command_coverage": [
      "list-providers",
      "check-provider",
      "test-provider",
      "list-profiles",
      "show-profile",
      "validate-config",
      "show-config",
      "config-health"
    ]
  },
  "detailed_results": [
    {
      "suite_name": "Multi-Provider Integration",
      "file_path": "tests/test_multi_provider_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.272554874420166,
      "priority": 1,
      "coverage_areas": [
        "Provider discovery and availability",
        "Configuration profile creation (6 profiles)",
        "Provider switching and fallback",
        "Plugin integration with providers",
        "Error handling and recovery",
        "Concurrent operations",
        "Performance and caching",
        "Environment variable resolution"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    },
    {
      "suite_name": "CLI Integration",
      "file_path": "tests/test_cli_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.2886819839477539,
      "priority": 1,
      "coverage_areas": [
        "list-providers command",
        "check-provider command",
        "test-provider command",
        "list-profiles command",
        "show-profile command",
        "validate-config command",
        "show-config command",
        "config-health command",
        "Enhanced run command with --provider/--profile"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    },
    {
      "suite_name": "Configuration Profiles Integration",
      "file_path": "tests/test_configuration_profiles_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.29821085929870605,
      "priority": 1,
      "coverage_areas": [
        "research-openai profile",
        "production-anthropic profile",
        "local-development profile",
        "fast-gpt35 profile",
        "creative-anthropic profile",
        "local-llama profile",
        "Parameter inheritance and overrides",
        "Profile switching runtime behavior"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    },
    {
      "suite_name": "Plugin System Integration",
      "file_path": "tests/test_plugin_system_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.29700517654418945,
      "priority": 1,
      "coverage_areas": [
        "Plugin discovery and registration",
        "Mixed plugin pipeline execution",
        "LLM-based plugin provider integration",
        "Technique-based plugin compatibility",
        "Plugin configuration inheritance",
        "Error isolation and recovery",
        "Performance characteristics"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    },
    {
      "suite_name": "Configuration Validation Integration",
      "file_path": "tests/test_configuration_validation_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.3052699565887451,
      "priority": 2,
      "coverage_areas": [
        "Pydantic v2 schema validation",
        "Configuration error messages",
        "Environment variable resolution",
        "Legacy configuration conversion",
        "Validation edge cases",
        "Provider configuration validation"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    },
    {
      "suite_name": "Pipeline Integration",
      "file_path": "tests/test_pipeline_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.2603797912597656,
      "priority": 1,
      "coverage_areas": [
        "Basic pipeline execution across providers",
        "Provider switching during runtime",
        "Profile-based execution",
        "Mixed plugin execution",
        "Error handling and recovery",
        "Performance characteristics",
        "Dependency resolution",
        "Complex workflows"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    },
    {
      "suite_name": "Error Handling Integration",
      "file_path": "tests/test_error_handling_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.3020050525665283,
      "priority": 2,
      "coverage_areas": [
        "Provider connection failures",
        "Configuration validation errors",
        "Plugin error isolation",
        "Resource exhaustion scenarios",
        "Invalid input handling",
        "Concurrent error scenarios",
        "Recovery mechanisms",
        "Error message quality"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    },
    {
      "suite_name": "Performance & Reliability Integration",
      "file_path": "tests/test_performance_reliability_integration.py",
      "test_count": 0,
      "passed": 0,
      "failed": 0,
      "errors": 0,
      "skipped": 0,
      "success_rate": 0.0,
      "duration": 0.2948720455169678,
      "priority": 2,
      "coverage_areas": [
        "Performance benchmarking across providers",
        "Load testing scenarios",
        "Memory usage patterns",
        "Concurrent execution performance",
        "Caching effectiveness",
        "Scalability testing",
        "Resource consumption monitoring",
        "Reliability under sustained load"
      ],
      "details": {
        "exit_code": 4,
        "stdout_lines": 1,
        "stderr_lines": 6
      }
    }
  ],
  "recommendations": [
    "\u26a0\ufe0f  Overall success rate is 0.0%. Consider investigating and fixing failing tests before deployment."
  ]
}